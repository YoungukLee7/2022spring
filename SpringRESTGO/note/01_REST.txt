01_Rest.txt

	# Rest (Representational State Transfer)
	
	- Http Uri로 해당 자원을 식별하고, 그것에 대한 CRUD를 HTTP method로 구분하는 방식
	- Create, Insert (Post method)	POST:/employee, 새 사원을 추가한다
	- Read, Select (Get method)		GET:/employee?id=101, 해당 사원을 조회한다
	- Update (Put method)			UPDATE:/employee?id=101, 해당 사원 정보를 수정한다
	- Delete (Delete method)		DELETE:/employee?id=101, 해당 사원 정보를 삭제한다
	- 응답에 뷰 페이지 대신 데이터를 사용하기 때문에 다양한 기기에서 사용할 수 있다는 장점이 있다
	
	# Spring REST 어노테이션
	
	@RestController - 일반적인 컨트롤러와 다른 RestController임을 표시
	@ResponseBody	- 일반적인 뷰 응답이 아닌 데이터를 응답한다는 것을 표시
	@RequestBody	- 요청에 실려온 데이터를 자바에서 사용할 수 있는 형태로 바인딩하는 어노테이션
	
	
	
	@RestController
	
	- 해당 컨트롤러는 일반 컨트롤러와는 다르게 웹 페이지(view) 대신 데이터에 응답한다
	- 메서드의 리턴 타입은 뷰를 찾아가는 것이 아니라 사용자에게 응답할 데이터 타입이 된다
	- 주로, 자바 객체를 JSON 또는 XML로 변환하여 응답한다.
	
	
	# jackson-databind
	
	- 자바 객체를 JSON 또는 XML 형식의 문자열로 쉽게 변환할 수 있는 라이브러리
	
		<!-- jackson-databind 추가 -->
		<dependency>
    		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-databind</artifactId>
   			<version>2.13.3</version>
		</dependency>
		
		<!-- jackson-dataformat-xml 추가-->
		<dependency>
    		<groupId>com.fasterxml.jackson.dataformat</groupId>
    		<artifactId>jackson-dataformat-xml</artifactId>
    		<version>2.13.3</version>
		</dependency>
	
	
	# JSON (javascript Object Notation)
	
	- 자바스크립트의 오브젝트와 아주 유사한 방식으로 객체를 표현하는 문자열 포멧
	- 자바스크립트의 오브젝트와는 약간 다르다 (ex: 키값에 ""를 반드시 찍어야 한다. 실제 자바스크립트에서는 안찍는다)
	- 자바스크립트가 아니더라도 해당 문자열을 실제 데이터로 치환하는 성능이 매우 뛰어나기 때문에
	  언어에 구애받지 않는 통신 표준으로 활용되고 있다 (ex: 자바 -> 자바스크립트 -> 파이선 -> 자바)
	- 숫자, 문자열, 배열, 객체, 블리언, 등의 값들을 구분할 수 있다
	- JSON은 프로그래밍 언어가 아니라 데이터 포멧이므로 함수 같은 것은 담을 수 없다
	  
	  {
	  	"key1": "String Value",
	  	"key2": 2022,
	  	"tall": 123.1234,
	  	"friends": ["Bill", "Mike", "Lee"],
	  	"members": {
	  		"k1": "v1",
	  		"k2": 1234
	  	},	  	
	  }